// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	v3newrelic "github.com/newrelic/go-agent/v3/newrelic"
)

// Agent is an autogenerated mock type for the Agent type
type Agent struct {
	mock.Mock
}

// RecordCustomEvent provides a mock function with given fields: key, params
func (_m *Agent) RecordCustomEvent(key string, params map[string]interface{}) {
	_m.Called(key, params)
}

// RecordCustomMetric provides a mock function with given fields: key
func (_m *Agent) RecordCustomMetric(key string) {
	_m.Called(key)
}

// StartTransaction provides a mock function with given fields: key
func (_m *Agent) StartTransaction(key string) *v3newrelic.Transaction {
	ret := _m.Called(key)

	var r0 *v3newrelic.Transaction
	if rf, ok := ret.Get(0).(func(string) *v3newrelic.Transaction); ok {
		r0 = rf(key)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*v3newrelic.Transaction)
		}
	}

	return r0
}

type mockConstructorTestingTNewAgent interface {
	mock.TestingT
	Cleanup(func())
}

// NewAgent creates a new instance of Agent. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewAgent(t mockConstructorTestingTNewAgent) *Agent {
	mock := &Agent{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
